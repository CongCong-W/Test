/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Customer.Customer;
import Business.DeliveryMan.DeliveryMan;
import Business.Restaurant.RestaurantAdmin;
import Business.Role.Role;
import Business.EcoSystem;

import Business.UserAccount.UserAccount;

import java.awt.CardLayout;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class SystemAdminManageJPanel extends javax.swing.JPanel {

    private JPanel container;
    private EcoSystem business;
    private Role.RoleType roleType;

    public static void show(JPanel cardSequenceJPanel, EcoSystem business, Role.RoleType roleType) {
        SystemAdminManageJPanel viewAirlineJPanel = new SystemAdminManageJPanel(cardSequenceJPanel, business, roleType);
        cardSequenceJPanel.add("SystemAdminManageJPanel" + roleType, viewAirlineJPanel);
        CardLayout layout = (CardLayout) cardSequenceJPanel.getLayout();
        layout.next(cardSequenceJPanel);
    }

    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public SystemAdminManageJPanel(JPanel container, EcoSystem business, Role.RoleType roleType) {
        initComponents();
        
        this.container = container;
        this.business = business;
        this.roleType = roleType;
        
        populateTable();
    }

    public void populateTable() {
        int rowCount = tblUserAccounts.getRowCount();
        DefaultTableModel model = (DefaultTableModel) tblUserAccounts.getModel();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        switch (roleType) {
            case Customer:
                List<Customer> customerList = business.getCustomerDirectory().getEntityList();
                addToTable(customerList);
                break;
            case DeliveryMan:
                List<DeliveryMan> deliveryManList = business.getDeliveryManDirectory().getEntityList();
                addToTable(deliveryManList);
                break;
            case RestaurantAdmin:
                List<RestaurantAdmin> restaurantAdminList = business.getRestaurantDirectory().getEntityList();
                addToTable(restaurantAdminList);
                break;
        }
    }

    private <T extends UserAccount> void addToTable(List<T> entityList) {
        if (entityList == null || entityList.size() == 0) {
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblUserAccounts.getModel();
        for (T entity : entityList) {
            Object[] row = new Object[6];
            row[0] = entity.getUsername();
            row[1] = entity.getPassword();
            row[2] = entity.getEmployee().getName();
            row[3] = entity.getEmployee().getId();
            row[4] = entity.getRole();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblUserAccounts = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        tblUserAccounts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Username", "Password", "Emploee Name", "Emploee Id", "Role"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUserAccounts.setPreferredSize(new java.awt.Dimension(530, 260));
        jScrollPane1.setViewportView(tblUserAccounts);
        if (tblUserAccounts.getColumnModel().getColumnCount() > 0) {
            tblUserAccounts.getColumnModel().getColumn(0).setResizable(false);
            tblUserAccounts.getColumnModel().getColumn(1).setResizable(false);
            tblUserAccounts.getColumnModel().getColumn(2).setResizable(false);
            tblUserAccounts.getColumnModel().getColumn(3).setResizable(false);
            tblUserAccounts.getColumnModel().getColumn(4).setResizable(false);
        }

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(420, 420, 420)
                        .addComponent(btnNew))
                    .addComponent(btnDelete)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnNew))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDelete)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        

        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        populateTable();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblUserAccounts;
    // End of variables declaration//GEN-END:variables
}
